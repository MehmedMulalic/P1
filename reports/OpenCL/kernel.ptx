//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-33500382
// Unknown Toolkit Version
// Based on NVVM 7.0.1
//

.version 8.3
.target sm_80, texmode_independent
.address_size 64

	// .globl	dcs

.entry dcs(
	.param .u64 .ptr .global .align 4 dcs_param_0,
	.param .u64 .ptr .global .align 4 dcs_param_1,
	.param .u32 dcs_param_2,
	.param .u32 dcs_param_3,
	.param .f32 dcs_param_4
)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<27>;
	.reg .b32 	%r<18>;
	.reg .b64 	%rd<18>;


	ld.param.u64 	%rd8, [dcs_param_0];
	ld.param.u64 	%rd16, [dcs_param_1];
	ld.param.u32 	%r2, [dcs_param_2];
	ld.param.u32 	%r3, [dcs_param_3];
	ld.param.f32 	%f9, [dcs_param_4];
	mov.b32 	%r4, %envreg3;
	mov.u32 	%r5, %ctaid.x;
	mov.u32 	%r6, %ntid.x;
	mov.u32 	%r7, %tid.x;
	add.s32 	%r8, %r7, %r4;
	mad.lo.s32 	%r9, %r6, %r5, %r8;
	cvt.s64.s32 	%rd1, %r9;
	mov.u32 	%r10, %ctaid.y;
	mov.u32 	%r11, %ntid.y;
	mov.u32 	%r12, %tid.y;
	mov.b32 	%r13, %envreg4;
	add.s32 	%r14, %r12, %r13;
	mad.lo.s32 	%r15, %r11, %r10, %r14;
	cvt.s64.s32 	%rd2, %r15;
	mov.b32 	%r16, %envreg7;
	mul.lo.s32 	%r1, %r16, %r11;
	setp.eq.s32 	%p1, %r3, 0;
	mov.f32 	%f25, 0f00000000;
	@%p1 bra 	$L__BB0_5;

	cvt.rn.f32.u64 	%f1, %rd1;
	cvt.rn.f32.u64 	%f2, %rd2;
	cvt.rn.f32.s32 	%f3, %r2;
	shl.b32 	%r17, %r3, 2;
	cvt.s64.s32 	%rd3, %r17;
	mov.f32 	%f25, 0f00000000;
	mov.u64 	%rd17, 0;

$L__BB0_2:
	ld.global.nc.f32 	%f12, [%rd16];
	sub.f32 	%f13, %f1, %f12;
	ld.global.nc.f32 	%f14, [%rd16+4];
	sub.f32 	%f15, %f2, %f14;
	ld.global.nc.f32 	%f16, [%rd16+8];
	sub.f32 	%f17, %f3, %f16;
	mul.f32 	%f18, %f15, %f15; // dy^2
	fma.rn.f32 	%f19, %f13, %f13, %f18;	// dx^2 + dy^2
	fma.rn.f32 	%f20, %f17, %f17, %f19; // dz^2 + dx^2 + dy^2
	sqrt.approx.f32 	%f5, %f20; // r
	setp.leu.f32 	%p2, %f5, 0f00000000; // if
	@%p2 bra 	$L__BB0_4; // branch

	ld.global.nc.f32 	%f21, [%rd16+12];
	div.full.f32 	%f22, %f21, %f5;
	add.f32 	%f25, %f25, %f22;

$L__BB0_4:
	add.s64 	%rd16, %rd16, 16;
	add.s64 	%rd17, %rd17, 4;
	setp.lt.u64 	%p3, %rd17, %rd3;
	@%p3 bra 	$L__BB0_2;

$L__BB0_5:
	cvt.s64.s32 	%rd11, %r1;
	mul.lo.s64 	%rd12, %rd1, %rd11;
	add.s64 	%rd13, %rd12, %rd2;
	shl.b64 	%rd14, %rd13, 2;
	add.s64 	%rd15, %rd8, %rd14;
	mul.f32 	%f23, %f25, %f9;
	st.global.f32 	[%rd15], %f23;
	ret;

}